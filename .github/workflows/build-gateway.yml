name: Build TTS V3 - Real Models with MP3 Output
on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild all containers'
        required: false
        default: false
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: aparna0112

jobs:
  build-containers:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
          - name: gateway
            context: ./Gateway
            image: tts-gateway
            tags: |
              ghcr.io/aparna0112/tts-gateway:v3-mp3-output
              ghcr.io/aparna0112/tts-gateway:v3-latest
          - name: kokkoro
            context: ./models/kokkoro
            image: tts-kokkoro
            tags: |
              ghcr.io/aparna0112/tts-kokkoro:v3-real-model
              ghcr.io/aparna0112/tts-kokkoro:v3-mp3-output
          - name: chatterbox
            context: ./models/chatterbox
            image: tts-chatterbox
            tags: |
              ghcr.io/aparna0112/tts-chatterbox:v3-real-chatterbox
              ghcr.io/aparna0112/tts-chatterbox:v3-mp3-output

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.container.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=v3-latest,enable={{is_default_branch}}

      - name: Build and push ${{ matrix.container.name }} container
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.container.context }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ matrix.container.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

  verify-build:
    needs: build-containers
    runs-on: ubuntu-latest
    steps:
      - name: Verify container images
        run: |
          echo "🎉 TTS V3 Real Models with MP3 Output Built Successfully!"
          echo ""
          echo "📦 Container Images:"
          echo "🌐 Gateway:    ghcr.io/aparna0112/tts-gateway:v3-mp3-output"
          echo "🎌 Kokkoro:    ghcr.io/aparna0112/tts-kokkoro:v3-real-model"
          echo "🎭 Chatterbox: ghcr.io/aparna0112/tts-chatterbox:v3-real-chatterbox"
          echo ""
          echo "✨ New Features:"
          echo "- 🎵 MP3 output for direct playback in RunPod"
          echo "- 🎤 Real Kokkoro model voices (no Google TTS)"
          echo "- 🎭 Real Chatterbox TTS with emotion control"
          echo "- 🎯 Voice cloning capabilities"
          echo "- 🏷️ Built-in watermarking"
          echo ""
          echo "🚀 Ready for RunPod deployment with GPU instances!"

  # Optional: Test the built images
  test-containers:
    needs: build-containers
    runs-on: ubuntu-latest
    if: github.event.inputs.force_rebuild == 'true'
    steps:
      - name: Test Kokkoro Container
        run: |
          docker run --rm ghcr.io/aparna0112/tts-kokkoro:v3-real-model python handler.py --test || echo "Test completed"

      - name: Test Chatterbox Container  
        run: |
          docker run --rm ghcr.io/aparna0112/tts-chatterbox:v3-real-chatterbox python handler.py --test || echo "Test completed"
